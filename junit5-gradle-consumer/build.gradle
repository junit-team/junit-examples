repositories {
	mavenCentral()
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '5.1.0'
ext.junitPlatformVersion = '1.1.0'
ext.junitJupiterVersion  = '5.1.0'
ext.log4jVersion         = '2.9.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'

jar {
	baseName = 'junit5-gradle-consumer'
	version = '1.0.0-SNAPSHOT'
}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

test {
	useJUnitPlatform {
		// includeEngines 'junit-jupiter', 'junit-vintage'
		// excludeEngines 'custom-engine'

		// includeTags 'fast'
		excludeTags 'slow'
	}

	testLogging {
		events 'passed', 'skipped', 'failed'
	}

	reports {
		html.enabled = true
	}
}

dependencies {
	// JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

	testCompile("junit:junit:${junit4Version}")
	testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}") {
		because 'allows JUnit 3 and JUnit 4 tests to run'
	}

	testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}") {
		because 'allows tests to run from IDEs that bundle older version of launcher'
	}
}

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '4.6'
}
